name: Maven CI/CD
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Build project with Maven
        run: mvn -B package --file pom.xml
  publish-job:
    runs-on: ubuntu-latest
    needs:
      - build_and_test
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - run: mvn -B package --file pom.xml -DskipTests
      - run: mkdir staging && cp target/*jar-with-dependencies.jar staging
      - uses: actions/upload-artifact@v1
        with:
          name: Package
          path: staging
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: testing-purpose
          IMAGE_TAG: demo-image
        run: >
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker images 
          #docker push ***.dkr.ecr.ap-south-1.amazonaws.com/testing-purpose:demo-image
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          #docker build -t testing-purpose .
          #docker tag testing-purpose:latest 095288515089.dkr.ecr.ap-south-1.amazonaws.com/testing-purpose:latest
          #docker push 095288515089.dkr.ecr.ap-south-1.amazonaws.com/testing-purpose:latest
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

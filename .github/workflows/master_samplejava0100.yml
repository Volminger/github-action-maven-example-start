name: Validate
on:
  push:
    branches:
      - 'featur1'

jobs:
  build_and_test:
    runs-on: ubuntu-latest
  
    steps:
      - uses: actions/checkout@v2
                      
      - name: Add Reviewer
        uses: peter-evans/add-comment@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          message: 'Please review and approve this pull request.'
          pull-request-number: ${{ github.event.number }}
          reviewers: 'rajubhovi1111111111'

      - name: Set up JDK 14
        uses: actions/setup-java@v1
        with:
          java-version: 14

      - name: Build project with Maven
        run: mvn clean install --file pom.xml
        
      - name: Dependency Test
        run: mvn dependency:analyze
        
  #     - name: Run Tests with Code Coverage
  #       run: mvn test jacoco:report

  #     - name: Generate JaCoCo badge
  #       id: jacoco
  #       uses: cicirello/jacoco-badge-generator@v2
  #       with:
  #        badges-directory: badges
  #        generate-branches-badge: true
  #        generate-summary: true

  #     - name: Log coverage percentages to workflow output
  #       run: |
  #        echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
  #        echo "branches = ${{ steps.jacoco.outputs.branches }}"
  #     - name: Upload JaCoCo coverage report as a workflow artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #        name: jacoco-report
  #        path: target/site/jacoco/




  #     - name: Get the Coverage info
  #       run: |
  #        echo "Total coverage ${{ steps.jacoco.outputs.coverage-overall }}"
  #        echo "Changed Files coverage ${{ steps.jacoco.outputs.coverage-changed-files }}"
          
  #     - name: Deploy to Azure App Service
  #       uses: azure/webapps-deploy@v2
  #       with:
  #         app-name: 'samplejava0100'  # Replace with your Azure App Service name
  #         slot-name: 'production'    # Replace with your deployment slot name if applicable
  #         publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_9ECB0A6A95C64112A06AFF0BE1D3243B }}  # Store your publish profile in GitHub Secrets
  #         package: ./target/github-action-maven-tutorial-1.0-SNAPSHOT.jar   # Path to the WAR file in the staging directory
          
      

  # publish-job:
  #   runs-on: ubuntu-latest
  #   needs: [build_and_test]
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-java@v1
  #       with:
  #         java-version: 14
  #     - run: mvn clean install --file pom.xml -DskipTests
  #     - name: Create staging directory
  #       run: mkdir -p staging
  #     - name: Copy artifacts to staging directory
  #       run:  cp target/*-jar-with-dependencies.jar staging/
  #     - name: Archive artifacts
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: Package
  #         path: staging
  #         retention-days: 7
  #         working-directory: staging




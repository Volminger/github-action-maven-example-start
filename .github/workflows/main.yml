name: Maven Continous Integration and Delivery

on:
 push:
 workflow_dispatch:
 
env:
  JIRA_ISSUE: 8
  
jobs:
  build_and_test:
    
    runs-on: ubuntu-latest
    name: Build and test
    timeout-minutes: 4

    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.ref }}
    - name: Set up JDK 14
      uses: actions/setup-java@v1
      with:
        java-version: 14

    - name: Cache the Maven packages to speed up build
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2 
        
    - name: Build project with Maven
      run: mvn -B package --file pom.xml

  compliance_checks:
      needs: [build_and_test]
      name: Compliance checks
      uses: ./.github/workflows/compliant-scan.yml
      with:
         config-path: .github/labeler.yml
      secrets:
            inherit
        
  package-job:
  
      runs-on: ubuntu-latest
      name: Package job
      needs: [compliance_checks]
      outputs:
        myoutput: ${{ steps.create_file.outputs.thisfilename }}
        mybranch: ${{ steps.create_file.outputs.thisbranch }}
      steps:
        - uses: actions/checkout@v2
        - name: set up jdk
          uses: actions/setup-java@v1
          with:
            java-version: 14
            
        - name: generate file
          run: mvn -B package --file pom.xml -DskipTests
          
        - name: create file
          id: create_file
          run: |
              mkdir staging && cp target/*jar-with-dependencies.jar staging              
              echo "thisfilename=$( ls staging )" >> $GITHUB_OUTPUT
              echo "thisbranch=$(echo ${GITHUB_REF##*/})" >> $GITHUB_OUTPUT
        - name: upload file      
          uses: actions/upload-artifact@v3
          with:
            name: ${{ steps.create_file.outputs.thisfilename }}
            path: staging
               
  create-release:
    name: Create release
    runs-on: ubuntu-latest
    permissions: 
      contents: write
    needs: [package-job]
    outputs:
        myoutput: ${{ needs.package-job.outputs.myoutput }}
        mybranch: ${{ env.JIRA_ISSUE }}
    steps:
      - name: Set JIRA ISSUE
        run: echo JIRA_ISSUE=${{ needs.package-job.outputs.mybranch }}| cut -d "-" -f -2  >> $GITHUB_ENV
      - name: Download artefact
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.package-job.outputs.myoutput }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0-alpha
          release_name: Release v1.0-alpha
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}        
          asset_path: ./${{ needs.package-job.outputs.myoutput }}
          asset_name: ${{ needs.package-job.outputs.myoutput }}
          asset_content_type: application/gzip
               
  deploy_to_env:
      needs: [create-release]
      name: Deploy to SIT
      uses: ./.github/workflows/deploy.yml
      with:
         which-env: SIT
         which-asset: ${{ needs.create-release.outputs.myoutput }}
         which-issue: ${{ needs.create-release.outputs.mybranch }}
      secrets:
            inherit

name: Deploy
on:
  pull_request_review:
    types: [submitted]

    branches:
      - dev

jobs:
  build_and_test:
    if: github.event.review.user.login == 'rajubhovi1111111111' && github.event.review.state == 'approved'
    runs-on: ubuntu-latest

    steps:
    - name: Add Reviewer
      uses: peter-evans/add-comment@v1
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        message: 'Please review and approve this pull request.'
        pull-request-number: ${{ github.event.number }}
        reviewers: 'rajubhovi1111111111'


    - name: Set up JDK 14
      uses: actions/setup-java@v1
      with:
          java-version: 14

    - name: Build project with Maven
      run: mvn clean install --file pom.xml

  #     - name: Test project with Maven
  #       run: mvn test --file pom.xml
  #       env:
  #         TEST_REPORT_DIR: ${{ github.workspace }}/target/surefire-reports

        
  # deploy-job:
  #   runs-on: ubuntu-latest
  #   needs: [publish-job]
  #   steps:
  #     - name: Deploy to Azure App Service
  #       uses: azure/webapps-deploy@v2
  #       with:
  #         app-name: 'samplejava0100'  # Replace with your Azure App Service name
  #         slot-name: 'production'    # Replace with your deployment slot name if applicable
  #         publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_9ECB0A6A95C64112A06AFF0BE1D3243B  }}  # Store your publish profile in GitHub Secrets
  #         package: staging/my-web-app.war   # Path to the WAR file in the staging directory


  # publish-job:
  #   runs-on: ubuntu-latest
  #   needs: [build_and_test]
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-java@v1
  #       with:
  #         java-version: 14
  #     - run: mvn clean install --file pom.xml -DskipTests
  #     - name: Create staging directory
  #       run: mkdir -p staging
  #     - name: Copy artifacts to staging directory
  #       run: cp target/*-jar-with-dependencies.jar staging/
  #     - name: Archive artifacts
  #       uses: actions/upload-artifact@v2
  #       with:
  #        name: Package
  #        path: staging
  #        retention-days: 7
  #        working-directory: staging
         
  #     - name: Publish test results
  #       run: 
  #         mkdir -p test-results
  #         find ${{ env.TEST_REPORT_DIR }} 
  #     - name: Upload test results
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: Test Results
  #         path: test-results
  #         if-no-files-found: warn
